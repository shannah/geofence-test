package ca.weblite.tests.geofence;

import static com.codename1.ui.CN.*;

import com.codename1.components.InfiniteProgress;
import com.codename1.location.Geofence;
import com.codename1.location.LocationManager;
import com.codename1.ui.*;
import com.codename1.ui.layouts.*;
import com.codename1.io.*;
import com.codename1.ui.plaf.*;
import com.codename1.ui.util.Resources;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class GeofenceTest {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
   

    public void start() {
        if(current != null){
            current.show();
            return;
        }

        Form hi = new Form("Hi World", BoxLayout.y());
        hi.add(new Label("Hello World"));
        if (!LocationManager.getLocationManager().isGeofenceSupported()) {
            hi.add(new Label("Geofence is not supported on this device"));
            hi.show();
            return;
        }

        Button addGeofence = new Button("Add Geofence");
        addGeofence.addActionListener(evt->{
            LocationManager mgr = LocationManager.getLocationManager();
            InfiniteProgress infiniteProgress = new InfiniteProgress();
            Dialog infiniteDialog = infiniteProgress.showInfiniteBlocking();
            infiniteDialog.addComponent(BorderLayout.NORTH, new Label("Getting current location..."));

            CN.invokeAndBlock(()->{
                mgr.getCurrentLocationSync(5000);
            });
            infiniteDialog.dispose();
            LocationManager.getLocationManager().addGeoFencing(GeofenceListenerImpl.class, new Geofence(
                    "geofence1", mgr.getLastKnownLocation(), 100, -1)
            );
        });
        hi.add(addGeofence);

        hi.show();
    }
    
    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
